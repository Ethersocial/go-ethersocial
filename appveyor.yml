os: Visual Studio 2015

# Clone directly into GOPATH.
clone_folder: C:\gopath\src\github.com\ethersocial\go-ethersocial
clone_depth: 5
version: "{branch}.{build}"
environment:
  global:
    GO111MODULE: on
    GOPATH: C:\gopath
    CC: gcc.exe
  matrix:
    - GETH_ARCH: amd64
      MSYS2_ARCH: x86_64
      MSYS2_BITS: 64
      MSYSTEM: MINGW64
      PATH: C:\msys64\mingw64\bin\;C:\Program Files (x86)\NSIS\;%PATH%
    - GETH_ARCH: 386
      MSYS2_ARCH: i686
      MSYS2_BITS: 32
      MSYSTEM: MINGW32
      PATH: C:\msys64\mingw32\bin\;C:\Program Files (x86)\NSIS\;%PATH%

install:
  - git submodule update --init
  - rmdir C:\go /s /q
  - appveyor DownloadFile https://dl.google.com/go/go1.14.2.windows-%GETH_ARCH%.zip
  - 7z x go1.14.2.windows-%GETH_ARCH%.zip -y -oC:\ > NUL
  - go version
  - gcc --version

build_script:
  - go run build\ci.go install

after_build:
  - go run build\ci.go archive -type zip -signer WINDOWS_SIGNING_KEY -upload gethstore/builds
  - go run build\ci.go nsis -signer WINDOWS_SIGNING_KEY -upload gethstore/builds
  - mkdir packages
  - mv *-*.zip packages\
  - mv *-*.exe packages\

#test_script:
#  - set CGO_ENABLED=1
#  - go run build\ci.go test -coverage

artifacts:
  - path: packages\*.*
    name: geth

deploy:
  # Create GitHub release, also set the release name and description.
  provider: GitHub
  tag: $(appveyor_repo_tag_name)
  description: "Release $(appveyor_repo_tag_name)"
  force_update: true  # Force update in case Travis CI created the release before.
  prerelease: $(project_version_is_prerelease)
  draft: false
  artifact: geth
  auth_token:
    secure: tlXNusW2nD1WbdbfZirHCOZJTYGyhE03sJpu+qyVPWJ5sE3IcWSJNZdpVT1g+UW1
  on:
    appveyor_repo_tag: true
